-- CREAR NUEVO USUARIO (SCHEMA)
CREATE USER ETL_USER IDENTIFIED BY 1235;
CREATE USER DATA_WAREHOUSE IDENTIFIED BY 1235;

-- ASIGNAR PERMISO DE ADMINISTRADOR A LOS SCHEMAS
GRANT DBA TO ETL_USER;
GRANT DBA TO DATA_WAREHOUSE;


-- CREAR TABLA DE SALES_ORDER
CREATE TABLE DATA_WAREHOUSE.SALES_ORDER (
    SALESORDERLINEKEY   INTEGER PRIMARY KEY,
    CHANNEL             VARCHAR2(50 CHAR),
    SALESORDER          VARCHAR2(50 CHAR),
    SALESORDERLINE      VARCHAR2(50 CHAR)
);

-- CREAR TABLA DE PRODUCT
CREATE TABLE DATA_WAREHOUSE.PRODUCT (
    PRODUCTKEY          INTEGER PRIMARY KEY,
    SKU                 VARCHAR2(50 CHAR),
    PRODUCT             VARCHAR2(100 CHAR),
    STANDARDCOST        NUMBER,
    COLOR               VARCHAR2(50 CHAR),
    LISTPRICE           NUMBER,
    MODEL               VARCHAR2(50 CHAR),
    SUBCATEGORY         VARCHAR2(100 CHAR),
    CATEGORY            VARCHAR2(100 CHAR)
);

-- CREAR TABLA DE SALES_TERRITORY
CREATE TABLE DATA_WAREHOUSE.SALES_TERRITORY (
    SALESTERRITORYKEY   INTEGER PRIMARY KEY,
    REGION              VARCHAR2(50 CHAR),
    COUNTRY             VARCHAR2(50 CHAR),
    GROUPSALES          VARCHAR2(50 CHAR)
);

-- CREAR TABLA DE RESELLER
CREATE TABLE DATA_WAREHOUSE.RESELLER (
    RESELLERKEY         INTEGER PRIMARY KEY,
    RESELLERID          VARCHAR2(50 CHAR),
    BUSINESSTYPE        VARCHAR2(100 CHAR),
    RESELLER            VARCHAR2(100 CHAR),
    CITY                VARCHAR2(50 CHAR),
    STATEPROVINCE       VARCHAR2(50 CHAR),
    COUNTRYREGION       VARCHAR2(50 CHAR),
    POSTALCODE          VARCHAR2(50 CHAR)
);

-- CREAR TABLA DE CUSTOMER
CREATE TABLE DATA_WAREHOUSE.CUSTOMER (
    CUSTOMERKEY         INTEGER PRIMARY KEY,
    CUSTOMERID          VARCHAR2(50 CHAR),
    CUSTOMER            VARCHAR2(100 CHAR),
    CITY                VARCHAR2(50 CHAR),
    STATEPROVINCE       VARCHAR2(50 CHAR),
    COUNTRYREGION       VARCHAR2(50 CHAR),
    POSTALCODE          VARCHAR2(50 CHAR)
);

-- CREAR TABLA DE DIM_TIME
CREATE TABLE DATA_WAREHOUSE.DIM_TIME (
    FECHAID         NUMBER,
    FECHA           NUMBER NOT NULL,
    ORDERDATEKEY    DATE PRIMARY KEY,
    AÑO             NUMBER NOT NULL,
    TRIMESTRE       NUMBER NOT NULL,
    MES             NUMBER NOT NULL,
    SEMANA          NUMBER NOT NULL,
    DIA             NUMBER NOT NULL,
    DIASEMANA       NUMBER NOT NULL,
    NTRIMESTRE      VARCHAR2(7) NOT NULL,
    NMES            VARCHAR2(15) NOT NULL,
    NMES3L          VARCHAR2(3) NOT NULL,
    NSEMANA         VARCHAR2(10) NOT NULL,
    NDIA            VARCHAR2(6) NOT NULL,
    NDIASEMANA      VARCHAR2(10) NOT NULL
);

-- CREAR TABLA DE FACT SALES
CREATE TABLE DATA_WAREHOUSE.FACT_SALES (
    SALESORDERLINEKEY       INTEGER PRIMARY KEY,
    RESELLERKEY             INTEGER, -- FK DE RESELLER DIMENSION
    CUSTOMERKEY             INTEGER, -- FK DE CUSTOMER DIMENSION
    PRODUCTKEY              INTEGER, -- FK DE PRODUCT DIMENSION
    ORDERDATEKEY            DATE,   -- FK DE TIME DIMENSION
    DUEDATEKEY              DATE,
    SHIPDATEKEY             DATE,
    SALESTERRITORYKEY       INTEGER, -- FK DE TERRITORY DIMENSION
    ORDERQUANTITY           NUMBER,      
    UNITPRICE               NUMBER,
    EXTENDEDAMOUNT          NUMBER,
    UNITPRICEDISCOUNTPCT    NUMBER, 
    PRODUCTSTANDARDCOST     NUMBER,
    TOTALPRODUCTCOST        NUMBER,
    SALESAMOUNT             NUMBER,
    PAYMENTMETHOD           VARCHAR2(50 CHAR)
);


-- AGREGAR LLAVES FORÁNEAS A LA TABLA FACT_SALES
-- Foreign key con Sales_Order
ALTER TABLE DATA_WAREHOUSE.FACT_SALES ADD CONSTRAINT SALESORDERLINEKEY FOREIGN KEY (SALESORDERLINEKEY) REFERENCES DATA_WAREHOUSE.SALES_ORDER (SALESORDERLINEKEY);
-- Foreign key con Reseller
ALTER TABLE DATA_WAREHOUSE.FACT_SALES ADD CONSTRAINT RESELLERKEY FOREIGN KEY (RESELLERKEY) REFERENCES DATA_WAREHOUSE.RESELLER (RESELLERKEY);
-- Foreign key con Customer
ALTER TABLE DATA_WAREHOUSE.FACT_SALES ADD CONSTRAINT CUSTOMERKEY FOREIGN KEY (CUSTOMERKEY) REFERENCES DATA_WAREHOUSE.CUSTOMER (CUSTOMERKEY);
-- Foreign key con Product
ALTER TABLE DATA_WAREHOUSE.FACT_SALES ADD CONSTRAINT PRODUCTKEY FOREIGN KEY (PRODUCTKEY) REFERENCES DATA_WAREHOUSE.PRODUCT (PRODUCTKEY);
-- Foreign key con Dim Time
ALTER TABLE DATA_WAREHOUSE.FACT_SALES ADD CONSTRAINT ORDERDATEKEY FOREIGN KEY (ORDERDATEKEY) REFERENCES DATA_WAREHOUSE.DIM_TIME (ORDERDATEKEY);
-- Foreign key con Sales_Territory
ALTER TABLE DATA_WAREHOUSE.FACT_SALES ADD CONSTRAINT SALESTERRITORYKEY FOREIGN KEY (SALESTERRITORYKEY) REFERENCES DATA_WAREHOUSE.SALES_TERRITORY(SALESTERRITORYKEY);


-- PROCEDIMIENTO PARA GENERAR LA DIM TIEMPO
DECLARE
   IdIni number;
   FechaDesde date;
   FechaHasta date;
BEGIN
    -- RANGO DE FECHAS A GENERAR: del 01/07/2017 al 31/12/2024 + 5
    IdIni := 1;
    FechaDesde := TO_DATE('20170701','YYYYMMDD');
    FechaHasta := TO_DATE((TO_CHAR(sysdate,'YYYY') + 5 || '1231'),'YYYYMMDD');  
    WHILE FechaDesde <= FechaHasta LOOP
      INSERT INTO DATA_WAREHOUSE.DIM_TIME
      (
        FECHAID,
        FECHA,
        ORDERDATEKEY,
        AÑO,
        TRIMESTRE,
        MES,
        SEMANA,
        DIA,
        DIASEMANA,
        NTRIMESTRE,
        NMES,
        NMES3L,
        NSEMANA,
        NDIA,
        NDIASEMANA
      )
      VALUES
      (
        IdIni,
        to_char(FechaDesde,'YYYYMMDD'),                       
        FechaDesde,
        to_char(FechaDesde,'YYYY'),
        to_char(FechaDesde, 'Q'),
        to_char(FechaDesde,'MM'),
        to_char(FechaDesde,'WW'),
        to_char(FechaDesde,'DD'),
        to_char(FechaDesde,'D'),
        'T'||to_char(FechaDesde, 'Q')||'/'||to_char(FechaDesde,'YY'),
        to_char(FechaDesde,'MONTH'),
        to_char(FechaDesde,'MON'),
        'Sem '||to_char(FechaDesde,'WW')||'/'||to_char(FechaDesde,'YY'),
        to_char(FechaDesde,'DD MON'),
        to_char(FechaDesde,'DAY')
      );  
      --INCREMAR BUCLE
      IdIni := IdIni +1;
      FechaDesde := FechaDesde + 1;
    END LOOP;
END;


-- CONSULTA DE DATOS
SELECT * FROM DATA_WAREHOUSE.SALES_ORDER;
SELECT * FROM DATA_WAREHOUSE.PRODUCT;
SELECT * FROM DATA_WAREHOUSE.SALES_TERRITORY;
SELECT * FROM DATA_WAREHOUSE.RESELLER ORDER BY RESELLERKEY;
SELECT * FROM DATA_WAREHOUSE.CUSTOMER ORDER BY CUSTOMERKEY;
SELECT * FROM DATA_WAREHOUSE.FACT_SALES ORDER BY SALESORDERLINEKEY;
SELECT * FROM DATA_WAREHOUSE.DIM_TIME ORDER BY ORDERDATEKEY;

-- ELIMINAR TABLAS
DROP TABLE DATA_WAREHOUSE.FACT_SALES;
DROP TABLE DATA_WAREHOUSE.SALES_ORDER;
DROP TABLE DATA_WAREHOUSE.PRODUCT;
DROP TABLE DATA_WAREHOUSE.SALES_TERRITORY;
DROP TABLE DATA_WAREHOUSE.RESELLER;
DROP TABLE DATA_WAREHOUSE.CUSTOMER;
DROP TABLE DATA_WAREHOUSE.DIM_TIME;

-- TRUNCAR TABLAS
TRUNCATE TABLE DATA_WAREHOUSE.FACT_SALES;
TRUNCATE TABLE DATA_WAREHOUSE.SALES_ORDER;
TRUNCATE TABLE DATA_WAREHOUSE.PRODUCT;
TRUNCATE TABLE DATA_WAREHOUSE.SALES_TERRITORY;
TRUNCATE TABLE DATA_WAREHOUSE.RESELLER;
TRUNCATE TABLE DATA_WAREHOUSE.CUSTOMER;
TRUNCATE TABLE DATA_WAREHOUSE.DIM_TIME;